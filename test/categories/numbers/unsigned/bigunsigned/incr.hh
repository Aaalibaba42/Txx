#pragma once

#include "numbers/unsigned/bigunsigned/ops/inc.hh"

#include "../../../../utils/is_same.hh"
#include "literals.hh"

namespace bigunsigned_increment_tests
{
    using BU0 = bu0;
    using BU1 = BigUnsignedInc_v<BU0>;
    using BU2 = BigUnsignedInc_v<BU1>;
    using BU3 = BigUnsignedInc_v<BU2>;
    using BU4 = BigUnsignedInc_v<BU3>;
    using BU5 = BigUnsignedInc_v<BU4>;
    using BU6 = BigUnsignedInc_v<BU5>;
    using BU7 = BigUnsignedInc_v<BU6>;
    using BU8 = BigUnsignedInc_v<BU7>;
    using BU9 = BigUnsignedInc_v<BU8>;
    using BU10 = BigUnsignedInc_v<BU9>;
    using BU11 = BigUnsignedInc_v<BU10>;
    using BU12 = BigUnsignedInc_v<BU11>;
    using BU13 = BigUnsignedInc_v<BU12>;
    using BU14 = BigUnsignedInc_v<BU13>;
    using BU15 = BigUnsignedInc_v<BU14>;
    using BU16 = BigUnsignedInc_v<BU15>;
    using BU17 = BigUnsignedInc_v<BU16>;
    using BU18 = BigUnsignedInc_v<BU17>;
    using BU19 = BigUnsignedInc_v<BU18>;
    using BU20 = BigUnsignedInc_v<BU19>;
    using BU21 = BigUnsignedInc_v<BU20>;
    using BU22 = BigUnsignedInc_v<BU21>;
    using BU23 = BigUnsignedInc_v<BU22>;
    using BU24 = BigUnsignedInc_v<BU23>;
    using BU25 = BigUnsignedInc_v<BU24>;
    using BU26 = BigUnsignedInc_v<BU25>;
    using BU27 = BigUnsignedInc_v<BU26>;
    using BU28 = BigUnsignedInc_v<BU27>;
    using BU29 = BigUnsignedInc_v<BU28>;
    using BU30 = BigUnsignedInc_v<BU29>;
    using BU31 = BigUnsignedInc_v<BU30>;
    using BU32 = BigUnsignedInc_v<BU31>;
    using BU33 = BigUnsignedInc_v<BU32>;
    using BU34 = BigUnsignedInc_v<BU33>;
    using BU35 = BigUnsignedInc_v<BU34>;
    using BU36 = BigUnsignedInc_v<BU35>;
    using BU37 = BigUnsignedInc_v<BU36>;
    using BU38 = BigUnsignedInc_v<BU37>;
    using BU39 = BigUnsignedInc_v<BU38>;
    using BU40 = BigUnsignedInc_v<BU39>;
    using BU41 = BigUnsignedInc_v<BU40>;
    using BU42 = BigUnsignedInc_v<BU41>;
    using BU43 = BigUnsignedInc_v<BU42>;
    using BU44 = BigUnsignedInc_v<BU43>;
    using BU45 = BigUnsignedInc_v<BU44>;
    using BU46 = BigUnsignedInc_v<BU45>;
    using BU47 = BigUnsignedInc_v<BU46>;
    using BU48 = BigUnsignedInc_v<BU47>;
    using BU49 = BigUnsignedInc_v<BU48>;
    using BU50 = BigUnsignedInc_v<BU49>;
    using BU51 = BigUnsignedInc_v<BU50>;
    using BU52 = BigUnsignedInc_v<BU51>;
    using BU53 = BigUnsignedInc_v<BU52>;
    using BU54 = BigUnsignedInc_v<BU53>;
    using BU55 = BigUnsignedInc_v<BU54>;
    using BU56 = BigUnsignedInc_v<BU55>;
    using BU57 = BigUnsignedInc_v<BU56>;
    using BU58 = BigUnsignedInc_v<BU57>;
    using BU59 = BigUnsignedInc_v<BU58>;
    using BU60 = BigUnsignedInc_v<BU59>;
    using BU61 = BigUnsignedInc_v<BU60>;
    using BU62 = BigUnsignedInc_v<BU61>;
    using BU63 = BigUnsignedInc_v<BU62>;
    using BU64 = BigUnsignedInc_v<BU63>;

    static_assert(is_same<bu0, BU0>);
    static_assert(is_same<bu1, BU1>);
    static_assert(is_same<bu2, BU2>);
    static_assert(is_same<bu3, BU3>);
    static_assert(is_same<bu4, BU4>);
    static_assert(is_same<bu5, BU5>);
    static_assert(is_same<bu6, BU6>);
    static_assert(is_same<bu7, BU7>);
    static_assert(is_same<bu8, BU8>);
    static_assert(is_same<bu9, BU9>);
    static_assert(is_same<bu10, BU10>);
    static_assert(is_same<bu11, BU11>);
    static_assert(is_same<bu12, BU12>);
    static_assert(is_same<bu13, BU13>);
    static_assert(is_same<bu14, BU14>);
    static_assert(is_same<bu15, BU15>);
    static_assert(is_same<bu16, BU16>);
    static_assert(is_same<bu17, BU17>);
    static_assert(is_same<bu18, BU18>);
    static_assert(is_same<bu19, BU19>);
    static_assert(is_same<bu20, BU20>);
    static_assert(is_same<bu21, BU21>);
    static_assert(is_same<bu22, BU22>);
    static_assert(is_same<bu23, BU23>);
    static_assert(is_same<bu24, BU24>);
    static_assert(is_same<bu25, BU25>);
    static_assert(is_same<bu26, BU26>);
    static_assert(is_same<bu27, BU27>);
    static_assert(is_same<bu28, BU28>);
    static_assert(is_same<bu29, BU29>);
    static_assert(is_same<bu30, BU30>);
    static_assert(is_same<bu31, BU31>);
    static_assert(is_same<bu32, BU32>);
    static_assert(is_same<bu33, BU33>);
    static_assert(is_same<bu34, BU34>);
    static_assert(is_same<bu35, BU35>);
    static_assert(is_same<bu36, BU36>);
    static_assert(is_same<bu37, BU37>);
    static_assert(is_same<bu38, BU38>);
    static_assert(is_same<bu39, BU39>);
    static_assert(is_same<bu40, BU40>);
    static_assert(is_same<bu41, BU41>);
    static_assert(is_same<bu42, BU42>);
    static_assert(is_same<bu43, BU43>);
    static_assert(is_same<bu44, BU44>);
    static_assert(is_same<bu45, BU45>);
    static_assert(is_same<bu46, BU46>);
    static_assert(is_same<bu47, BU47>);
    static_assert(is_same<bu48, BU48>);
    static_assert(is_same<bu49, BU49>);
    static_assert(is_same<bu50, BU50>);
    static_assert(is_same<bu51, BU51>);
    static_assert(is_same<bu52, BU52>);
    static_assert(is_same<bu53, BU53>);
    static_assert(is_same<bu54, BU54>);
    static_assert(is_same<bu55, BU55>);
    static_assert(is_same<bu56, BU56>);
    static_assert(is_same<bu57, BU57>);
    static_assert(is_same<bu58, BU58>);
    static_assert(is_same<bu59, BU59>);
    static_assert(is_same<bu60, BU60>);
    static_assert(is_same<bu61, BU61>);
    static_assert(is_same<bu62, BU62>);
    static_assert(is_same<bu63, BU63>);
    static_assert(is_same<bu64, BU64>);
} // namespace bigunsigned_increment_tests
